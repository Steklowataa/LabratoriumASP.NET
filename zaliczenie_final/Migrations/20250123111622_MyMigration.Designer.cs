// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using zaliczenie_final.Context;

#nullable disable

namespace zaliczenie_final.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250123111622_MyMigration")]
    partial class MyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("zaliczenie_final.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CountryName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("country_name")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("zaliczenie_final.Entities.RankingCriterion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("CriteriaName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("criteria_name")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("RankingSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ranking_system_id")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("RankingSystemId");

                    b.ToTable("ranking_criteria", (string)null);
                });

            modelBuilder.Entity("zaliczenie_final.Entities.RankingSystem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("SystemName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("system_name")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.ToTable("ranking_system", (string)null);
                });

            modelBuilder.Entity("zaliczenie_final.Entities.University", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("country_id")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("UniversityName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("university_name")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("university", (string)null);
                });

            modelBuilder.Entity("zaliczenie_final.Entities.UniversityRankingYear", b =>
                {
                    b.Property<int?>("RankingCriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ranking_criteria_id")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("score")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("university_id")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("year")
                        .HasDefaultValueSql("NULL");

                    b.HasIndex("RankingCriteriaId");

                    b.HasIndex("UniversityId");

                    b.ToTable("university_ranking_year", (string)null);
                });

            modelBuilder.Entity("zaliczenie_final.Entities.UniversityYear", b =>
                {
                    b.Property<int?>("NumStudents")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("num_students")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("PctFemaleStudents")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pct_female_students")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("PctInternationalStudents")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("pct_international_students")
                        .HasDefaultValueSql("NULL");

                    b.Property<double?>("StudentStaffRatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasColumnName("student_staff_ratio")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("UniversityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("university_id")
                        .HasDefaultValueSql("NULL");

                    b.Property<int?>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("year")
                        .HasDefaultValueSql("NULL");

                    b.HasIndex("UniversityId");

                    b.ToTable("university_year", (string)null);
                });

            modelBuilder.Entity("zaliczenie_final.Entities.RankingCriterion", b =>
                {
                    b.HasOne("zaliczenie_final.Entities.RankingSystem", "RankingSystem")
                        .WithMany("RankingCriteria")
                        .HasForeignKey("RankingSystemId");

                    b.Navigation("RankingSystem");
                });

            modelBuilder.Entity("zaliczenie_final.Entities.University", b =>
                {
                    b.HasOne("zaliczenie_final.Entities.Country", "Country")
                        .WithMany("Universities")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("zaliczenie_final.Entities.UniversityRankingYear", b =>
                {
                    b.HasOne("zaliczenie_final.Entities.RankingCriterion", "RankingCriteria")
                        .WithMany()
                        .HasForeignKey("RankingCriteriaId");

                    b.HasOne("zaliczenie_final.Entities.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("RankingCriteria");

                    b.Navigation("University");
                });

            modelBuilder.Entity("zaliczenie_final.Entities.UniversityYear", b =>
                {
                    b.HasOne("zaliczenie_final.Entities.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("University");
                });

            modelBuilder.Entity("zaliczenie_final.Entities.Country", b =>
                {
                    b.Navigation("Universities");
                });

            modelBuilder.Entity("zaliczenie_final.Entities.RankingSystem", b =>
                {
                    b.Navigation("RankingCriteria");
                });
#pragma warning restore 612, 618
        }
    }
}
